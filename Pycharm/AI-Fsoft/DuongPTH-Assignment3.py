# -*- coding: utf-8 -*-
"""DuongPTH-Assignment3

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Lio6wlLh1yFLovv7LKJAzNm9I97b-Quo
"""

# import library
import numpy as np
import pandas as pd
# %matplotlib inline
from sklearn import preprocessing
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import jaccard_similarity_score
from sklearn.metrics import log_loss
from sklearn.model_selection import train_test_split

# get data and preparation for prediction
df = pd.read_csv(
    "https://raw.githubusercontent.com/parulnith/A-guide-to-Machine-Learning-in-R/master/Part%205%20Logistic%20regression%20dataset/quality.csv")
header_for_prediction = ['InpatientDays', 'Narcotics', 'DaysSinceLastERVisit', 'Pain', 'MedicalClaims', 'ClaimLines',
                         'StartedOnCombination', 'StartedOnCombination', 'AcuteDrugGapSmall', 'PoorCare']

# choose features for prediction
data = df[header_for_prediction]
data.head()

# ensure data dimention
print(data.shape)
print(data.columns)

# tunning data
data.DaysSinceLastERVisit = data.DaysSinceLastERVisit.astype('int')
data.StartedOnCombination = data.StartedOnCombination.astype('int')
data.dtypes

X = np.asarray(data[header_for_prediction])

y = np.asarray(data['PoorCare'])

X = preprocessing.StandardScaler().fit(X).transform(X)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=4)
print('Train set:', X_train.shape, y_train.shape)
print('Test set:', X_test.shape, y_test.shape)

LR = LogisticRegression(C=0.01, solver='saga').fit(X_train, y_train)
yhat = LR.predict(X_test)
yhat_prob = LR.predict_proba(X_test)
yhat_prob
print('Log Loss', log_loss(y_test, yhat_prob))
print('Accuracy', jaccard_similarity_score(y_test, yhat))
